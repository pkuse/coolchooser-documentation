使用powerdesigner来进行数据管理设计。
其中coolchooser.cdm是整个系统的概念模型，基本照抄类图实现的。着重表现每一个类以及其关系，反应了OOA的结果。

将它转换到物理模型之后是coolchooser.pdm，这一步就是OOD的步骤。图中有7个数据库表，其中每一个数据库表都对应了一个类或者关系，要着重注意：
（1）为了简单化依赖关系，让每一个类的主码都是唯一标识符ID，这样表关系就会简单很多。
（2）像投票-投票选项，投票选项-投票记录，创建用户-投票，用户-投票记录，都是一对多关系且前者非空，所以在设计中后者的数据库中有前者的主码作为外键。
（3）关注关系是多对多关系，所以新建了一张表，让关联的两个类的主键作为外键，且一起成为这个表的主键。
（4）后来发现账户这个类是一个需要被虚继承的类，因为账户要么是用户要么是管理员。将其实现是冗余的。所以由一定理由不将其在作为数据库的一张表实现。
要注意到所有的类都对应着数据库中的一个表，所以增删查改都只要找到同名的对应表即可。

为此建立了一个专用于数据操作的类，名叫数据管理系统，（见数据管理系统.vsdx）。这个类定义了上面各个类的增删改查的功能接口，用于统一的数据管理。由各个类调用。
